import{s as p,r as b}from"./router-dd9501cf.js";const T="http://localhost:8080/casino",I=new Headers({Accept:"application/json"}),u={method:"GET",headers:I};async function N(e){const t=T+`/${e}/tables`;return await(await fetch(t,u)).json()}async function R(){const e=T+"/gametypes";return await(await fetch(e,u)).json()}const h="blackjack",E=p("blackjackStore",{state:()=>({tables:[],table:{},command:{},player:{},counter:{}}),getters:{getTables(e){return e.tables},getTable(e){return e.table},getCounter(e){return e.counter},getPlayer(e){return e.player}},actions:{async populateStore(){try{let e=await N(h);this.tables=e.sort((t,s)=>t.thresholds.minimumBet-s.thresholds.minimumBet)}catch(e){alert(e)}},reduceCounter(){let e=this.counter;e--,this.counter=e},logout(e){this.player=e}}});var r=(e=>(e.NEW_PLAYER="NEW_PLAYER",e.BET_TIME_START="BET_TIME_START",e.INSURANCE_TIME_START="INSURANCE_TIME_START",e.PLAYER_TIME_START="PLAYER_TIME_START",e.LOGIN="LOGIN",e.ROUND_COMPLETED="ROUND_COMPLETED",e.PLAYER_LEFT="PLAYER_LEFT",e.STATUS_UPDATE="STATUS_UPDATE",e.OPEN_TABLE="OPEN_TABLE",e.TIMED_OUT="TIMED_OUT",e.INITIAL_DEAL_DONE="INITIAL_DEAL_DONE",e.NO_BETS_NO_DEAL="NO_BETS_NO_DEAL",e))(r||{});let c,n;function i(){n=E(),y()}function y(){c&&clearInterval(c),c=setInterval(()=>{n.reduceCounter(),n.getCounter<=0&&clearInterval(c)},1e3)}const a=E(),f="BLACKJACK";function D(e){switch(a.$patch({command:e.title}),a.getPlayer&&(e.table.players.find(s=>s.userName===a.getPlayer.userName)||a.logout({})),e.title){case r.OPEN_TABLE:L(e);break;case r.LOGIN:a.$patch({player:e.player});break;case r.NO_BETS_NO_DEAL:S(e);break;case r.BET_TIME_START:case r.PLAYER_TIME_START:case r.INSURANCE_TIME_START:case r.INITIAL_DEAL_DONE:_(e);break;case r.ROUND_COMPLETED:O(e);break;default:l(e)}}const L=async e=>{let t=e.table;b.push({name:"blackjack",params:{tableId:t.id}}),_(e)},S=async e=>{let t={table:e.table,player:e.player,command:e.title,counter:e.table.counterTime};a.$patch(t)},l=async e=>{let t={table:e.table,command:e.title,counter:e.table.counterTime};const s=e.table.players.find(A=>{var o;return A.userName===((o=a.getPlayer)==null?void 0:o.userName)});a.getPlayer&&s&&(t.player=s),a.$patch(t)},_=async e=>{l(e),i()},O=async e=>{const t=e.table.tableCard.thresholds.phaseDelay;e.table.counterTime=t/1e3,l(e),i()};export{f as B,r as C,E as a,D as b,R as u};
